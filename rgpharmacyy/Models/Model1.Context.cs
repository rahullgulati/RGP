//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace rgpharmacyy.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class rgEntities : DbContext
    {
        public rgEntities()
            : base("name=rgEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Medicine> Medicines { get; set; }
        public virtual DbSet<Health_care> Health_care { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Covid_essentials> Covid_essentials { get; set; }
    
        public virtual ObjectResult<login_Result> login(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<login_Result>("login", emailParameter, passwordParameter);
        }
    
        public virtual int medicine_insert(string m_name, string c_name, Nullable<System.DateTime> manufacture_date, Nullable<System.DateTime> expiry_date, Nullable<decimal> price, Nullable<int> quantity, string img, string des)
        {
            var m_nameParameter = m_name != null ?
                new ObjectParameter("m_name", m_name) :
                new ObjectParameter("m_name", typeof(string));
    
            var c_nameParameter = c_name != null ?
                new ObjectParameter("c_name", c_name) :
                new ObjectParameter("c_name", typeof(string));
    
            var manufacture_dateParameter = manufacture_date.HasValue ?
                new ObjectParameter("manufacture_date", manufacture_date) :
                new ObjectParameter("manufacture_date", typeof(System.DateTime));
    
            var expiry_dateParameter = expiry_date.HasValue ?
                new ObjectParameter("expiry_date", expiry_date) :
                new ObjectParameter("expiry_date", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("medicine_insert", m_nameParameter, c_nameParameter, manufacture_dateParameter, expiry_dateParameter, priceParameter, quantityParameter, imgParameter, desParameter);
        }
    
        public virtual int Health_care_insert(string p_name, string c_name, Nullable<System.DateTime> manufacture_date, Nullable<System.DateTime> expiry_date, Nullable<decimal> price, Nullable<int> quantity, string img, string des)
        {
            var p_nameParameter = p_name != null ?
                new ObjectParameter("p_name", p_name) :
                new ObjectParameter("p_name", typeof(string));
    
            var c_nameParameter = c_name != null ?
                new ObjectParameter("c_name", c_name) :
                new ObjectParameter("c_name", typeof(string));
    
            var manufacture_dateParameter = manufacture_date.HasValue ?
                new ObjectParameter("manufacture_date", manufacture_date) :
                new ObjectParameter("manufacture_date", typeof(System.DateTime));
    
            var expiry_dateParameter = expiry_date.HasValue ?
                new ObjectParameter("expiry_date", expiry_date) :
                new ObjectParameter("expiry_date", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Health_care_insert", p_nameParameter, c_nameParameter, manufacture_dateParameter, expiry_dateParameter, priceParameter, quantityParameter, imgParameter, desParameter);
        }
    
        public virtual int medicine_update(Nullable<int> mid, string m_name, string c_name, Nullable<System.DateTime> manufacture_date, Nullable<System.DateTime> expiry_date, Nullable<decimal> price, Nullable<int> quantity, string img, string des)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("mid", mid) :
                new ObjectParameter("mid", typeof(int));
    
            var m_nameParameter = m_name != null ?
                new ObjectParameter("m_name", m_name) :
                new ObjectParameter("m_name", typeof(string));
    
            var c_nameParameter = c_name != null ?
                new ObjectParameter("c_name", c_name) :
                new ObjectParameter("c_name", typeof(string));
    
            var manufacture_dateParameter = manufacture_date.HasValue ?
                new ObjectParameter("manufacture_date", manufacture_date) :
                new ObjectParameter("manufacture_date", typeof(System.DateTime));
    
            var expiry_dateParameter = expiry_date.HasValue ?
                new ObjectParameter("expiry_date", expiry_date) :
                new ObjectParameter("expiry_date", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("medicine_update", midParameter, m_nameParameter, c_nameParameter, manufacture_dateParameter, expiry_dateParameter, priceParameter, quantityParameter, imgParameter, desParameter);
        }
    
        public virtual int cart_insert(string email, Nullable<int> mid, Nullable<int> pid, Nullable<int> oid, Nullable<decimal> total_price, Nullable<int> quantity)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var midParameter = mid.HasValue ?
                new ObjectParameter("mid", mid) :
                new ObjectParameter("mid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var oidParameter = oid.HasValue ?
                new ObjectParameter("oid", oid) :
                new ObjectParameter("oid", typeof(int));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cart_insert", emailParameter, midParameter, pidParameter, oidParameter, total_priceParameter, quantityParameter);
        }
    
        public virtual ObjectResult<cart_display_Result> cart_display(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cart_display_Result>("cart_display", emailParameter);
        }
    
        public virtual int Orders_insert(string email, string address, Nullable<decimal> amount, string payment_method, ObjectParameter oid)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var payment_methodParameter = payment_method != null ?
                new ObjectParameter("payment_method", payment_method) :
                new ObjectParameter("payment_method", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Orders_insert", emailParameter, addressParameter, amountParameter, payment_methodParameter, oid);
        }
    
        public virtual ObjectResult<Colgate_Result> Colgate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Colgate_Result>("Colgate");
        }
    
        public virtual ObjectResult<Dettol_Result> Dettol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dettol_Result>("Dettol");
        }
    
        public virtual ObjectResult<Nivea_Result> Nivea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nivea_Result>("Nivea");
        }
    
        public virtual ObjectResult<brand_Result> brand(string cname)
        {
            var cnameParameter = cname != null ?
                new ObjectParameter("cname", cname) :
                new ObjectParameter("cname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<brand_Result>("brand", cnameParameter);
        }
    
        public virtual ObjectResult<covid_Result> covid(string des)
        {
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<covid_Result>("covid", desParameter);
        }
    
        public virtual int register_user(string firstName, string lastName, string email, string phoneNumber, Nullable<System.DateTime> dOB, string address, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("register_user", firstNameParameter, lastNameParameter, emailParameter, phoneNumberParameter, dOBParameter, addressParameter, passwordParameter);
        }
    
        public virtual int medicine_update1(Nullable<int> mid, string m_name, string c_name, Nullable<System.DateTime> manufacture_date, Nullable<System.DateTime> expiry_date, Nullable<decimal> price, Nullable<int> quantity, string img, string des)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("mid", mid) :
                new ObjectParameter("mid", typeof(int));
    
            var m_nameParameter = m_name != null ?
                new ObjectParameter("m_name", m_name) :
                new ObjectParameter("m_name", typeof(string));
    
            var c_nameParameter = c_name != null ?
                new ObjectParameter("c_name", c_name) :
                new ObjectParameter("c_name", typeof(string));
    
            var manufacture_dateParameter = manufacture_date.HasValue ?
                new ObjectParameter("manufacture_date", manufacture_date) :
                new ObjectParameter("manufacture_date", typeof(System.DateTime));
    
            var expiry_dateParameter = expiry_date.HasValue ?
                new ObjectParameter("expiry_date", expiry_date) :
                new ObjectParameter("expiry_date", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("medicine_update1", midParameter, m_nameParameter, c_nameParameter, manufacture_dateParameter, expiry_dateParameter, priceParameter, quantityParameter, imgParameter, desParameter);
        }
    }
}
